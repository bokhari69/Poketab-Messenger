export function PanZoom(element,opts){const minScale=(opts=opts||{}).minScale?opts.minScale:.4,maxScale=opts.maxScale?opts.maxScale:3,increment=opts.increment?opts.increment:.05,liner=!!opts.liner&&opts.liner;new AttachPanZoom(element,minScale,maxScale,increment,liner)}class AttachPanZoom{constructor(ele,minScale,maxScale,increment,liner){this.increment=increment,this.minScale=minScale,this.maxScale=maxScale,this.liner=liner,this.panning=!1,this.oldX=this.oldY=0;const self=this;ele.style.transform="matrix(1, 0, 0, 1, 0, 0)",this.getTransformMatrix=function(){const trans=ele.style.transform,start=trans.indexOf("(")+1,end=trans.indexOf(")"),matrix=trans.slice(start,end).split(",");return{scale:+matrix[0],transX:+matrix[4],transY:+matrix[5]}},this.setTransformMatrix=function(o){ele.style.transform="matrix("+o.scale+", 0, 0, "+o.scale+", "+o.transX+", "+o.transY+")"},this.applyTranslate=function(dx,dy){const newTrans=this.getTransformMatrix();newTrans.transX+=dx,newTrans.transY+=dy,this.setTransformMatrix(newTrans)},this.applyScale=function(dscale,x,y){const newTrans=this.getTransformMatrix(),width=ele.width?ele.width:ele.offsetWidth,height=ele.height?ele.height:ele.offsetHeight,tranX=x-width/2,tranY=y-height/2;dscale=this.liner?dscale:dscale*newTrans.scale,newTrans.scale+=dscale;const maxOrMinScale=newTrans.scale<=this.minScale||newTrans.scale>=this.maxScale;newTrans.scale<this.minScale&&(newTrans.scale=this.minScale),newTrans.scale>this.maxScale&&(newTrans.scale=this.maxScale),maxOrMinScale||(this.applyTranslate(tranX,tranY),this.setTransformMatrix(newTrans),this.applyTranslate(-tranX*dscale,-tranY*dscale))},ele.addEventListener("mousedown",(function(e){e.preventDefault(),this.panning=!0,this.oldX=e.clientX,this.oldY=e.clientY})),ele.addEventListener("mouseup",(function(){this.panning=!1})),ele.addEventListener("mouseleave",(function(){this.panning=!1})),ele.addEventListener("mousemove",(function(e){if(this.panning){const deltaX=e.clientX-this.oldX,deltaY=e.clientY-this.oldY;self.applyTranslate(deltaX,deltaY),this.oldX=e.clientX,this.oldY=e.clientY}})),ele.addEventListener("dblclick",(function(){const newTrans=self.getTransformMatrix();newTrans.scale=1,newTrans.transX=0,newTrans.transY=0,self.setTransformMatrix(newTrans)})),this.getScrollDirection=function(e){const delta=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail));delta<0?self.applyScale(-self.increment,e.offsetX,e.offsetY):self.applyScale(self.increment,e.offsetX,e.offsetY)},ele.addEventListener("DOMMouseScroll",this.getScrollDirection,!1),ele.addEventListener("mousewheel",this.getScrollDirection,!1)}}