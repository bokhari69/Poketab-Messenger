<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sticker</title>
    <script src="./../libs/fontawesome.js"></script>
    <script defer src="/libs/mustache.js"></script>
    <script defer src="/stickers/stickersConfig.js"></script>
</head>
<body>

    <button id="btn">Sticker</button>

    <div class="stickersPanel" id="stickersPanel">
        <div class="stickerGroups">
            <div class="names" id="selectStickerGroup"></div>
            <i class="fa-solid fa-xmark clickable" id="closeStickerPanel"></i>
        </div>
        <div class="stickers" id="stickers"></div>
    </div>

    <style>
        *{
            border: 0;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        ::-webkit-scrollbar {
            width: 0px;
            height: 0px;
        }

        .stickersPanel{
            position: fixed;
            bottom: -50%;
            height: 50vh;
            width: 100%;
            display: none;
            visibility: hidden;
            opacity: 0;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            border-radius: 10px 10px 0 0;
            overflow: hidden;
            background: #121a2b;
            transition: 2ms ease-in-out;
        }
        .stickersPanel.active{
            display: flex;
            visibility: visible;
            opacity: 1;
            bottom: 0;
        }
        .stickersPanel img{
            -webkit-user-drag: none;
        }
        .stickerGroups{
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            border-radius: 10px 10px 0 0;
            background: rgb(30, 41, 63);
        }
        .stickerGroups i{
            font-size: 1.2rem;
            color: #f00;
            padding: 10px;
        }
        .stickerGroups .names{
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            padding: 3px 10px;
            align-items: center;
            gap: 10px;
        }
        .stickerGroups .names > img{
            height: 30px;
            width: 30px;
            border-radius: 10px;
        }
        
        .stickers{
            display: flex;
            align-items: center;
            justify-content: center;
            flex-wrap: wrap;
            overflow: scroll;
        }
        .stickers > img{
            width: clamp(80px, 30vw, 100px);
            border-radius: 10px;
        }


        .clickable{
            cursor: pointer;
        }

    </style>
    <script>
        window.addEventListener('DOMContentLoaded', () => {


            const themeAccent = {
            blue: {
                secondary: 'hsl(213, 98%, 57%)',
                foreground: '#e1eeff',
                msg_get: 'hsl(213, 40%, 57%)',
                msg_get_reply: 'hsl(213, 35%, 27%)',
                msg_send: 'hsl(213, 98%, 57%)',
                msg_send_reply: 'hsl(213, 88%, 27%)'
            },
            geometry: {
                secondary: 'hsl(15, 98%, 57%)',
                foreground: '#e1eeff',
                msg_get: 'hsl(15, 40%, 57%)',
                msg_get_reply: 'hsl(15, 35%, 27%)',
                msg_send: 'hsl(15, 98%, 57%)',
                msg_send_reply: 'hsl(15, 88%, 27%)'
            },
            dark_mood: {
                secondary: 'hsl(216, 37%, 44%)',
                foreground: '#e1eeff',
                msg_get: 'hsl(216, 27%, 33%)',
                msg_get_reply: 'hsl(216, 20%, 21%)',
                msg_send: 'hsl(216, 37%, 44%)',
                msg_send_reply: 'hsl(216, 32%, 23%)'
            },
            forest: {
                secondary: 'hsl(162, 60%, 42%)',
                foreground: '#e1eeff',
                msg_get: 'hsl(162, 18%, 41%)',
                msg_get_reply: 'hsl(162, 14%, 27%)',
                msg_send: 'hsl(162, 60%, 42%)',
                msg_send_reply: 'hsl(162, 32%, 34%)'
            }
        }



            let stickerNames;
            let stickers = '';

            stickerNames = Stickers.map(sticker => {
                return `<img src="/stickers/${sticker.name}/${sticker.icon}.webp" alt="${sticker.name}" data-name="${sticker.name}" class="stickerName clickable">`;
            }).join('');


            let selectedStickerGroup = Stickers[0].name;
            let selectedStickerGroupCount = Stickers[0].count;
            console.log(selectedStickerGroup, selectedStickerGroupCount);
            
            for (let i = 1; i <= selectedStickerGroupCount; i++) {
                stickers += `<img src="/stickers/${selectedStickerGroup}/${i}.webp" alt="${selectedStickerGroup}-${i}" data-name="${selectedStickerGroup}/${i}" class="stickerpack clickable">`;
            }
            
            document.getElementById('selectStickerGroup').innerHTML = stickerNames;
            document.getElementById('stickers').innerHTML = stickers;
            document.querySelector('.names > img[data-name="' + selectedStickerGroup + '"]').style.background = themeAccent[localStorage["theme"]].msg_send;

            document.getElementById('selectStickerGroup').addEventListener('click', e => {
                if (e.target.tagName === 'IMG') {
                    document.getElementById('selectStickerGroup').querySelectorAll('.stickerName')
                    .forEach(sticker => {
                        sticker.style.background = 'transparent';
                    });
                    selectedStickerGroup = e.target.dataset.name;
                    selectedStickerGroupCount = Stickers.find(sticker => sticker.name === selectedStickerGroup).count;
                    stickers = '';
                    for (let i = 1; i <= selectedStickerGroupCount; i++) {
                        stickers += `<img src="/stickers/${selectedStickerGroup}/${i}.webp" alt="${selectedStickerGroup}-${i}" data-name="${selectedStickerGroup}/${i}" class="stickerpack clickable">`;
                    }
                    document.querySelector('.names > img[data-name="' + selectedStickerGroup + '"]').style.background = themeAccent[localStorage["theme"]].msg_send;
                    document.getElementById('stickers').innerHTML = stickers;
                }
            } );

            document.getElementById('stickers').addEventListener('click', e => {
                if (e.target.tagName === 'IMG') {
                    document.getElementById('stickers').querySelectorAll('.stickerpack')
                    .forEach(sticker => {
                        sticker.style.background = 'transparent';
                    });
                    e.target.style.background = themeAccent[localStorage["theme"]].msg_send;
                    console.log(e.target.dataset.name);
                    closeStickerPanel();
                }
            } );
            
            function toggle(){
                document.getElementById('stickersPanel').classList.add('active');
            }

            document.getElementById('closeStickerPanel').addEventListener('click', () => {
                closeStickerPanel();
            });

            function closeStickerPanel(){
                document.getElementById('stickersPanel').classList.remove('active');
            }

            document.getElementById('btn').addEventListener('click', toggle);


        });
    </script>
</body>
</html>