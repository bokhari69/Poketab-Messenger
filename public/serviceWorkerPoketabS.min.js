const OFFLINE_VERSION=2010,CACHE_NAME="offline",OFFLINE_URL="/offline";self.addEventListener("install",event=>{event.waitUntil((async()=>{await caches.keys().then(cacheNames=>Promise.all(cacheNames.map(cache=>{if("offline-2010"!==cache)return console.log("Service Worker: Clearing Old cache"),caches.delete(cache)})));const cache=await caches.open("offline-2010");await cache.add(new Request("/offline",{cache:"reload"}))})()),self.skipWaiting()}),self.addEventListener("activate",event=>{event.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim()}),self.addEventListener("fetch",event=>{"navigate"===event.request.mode&&event.respondWith((async()=>{try{const preloadResponse=await event.preloadResponse;if(preloadResponse)return preloadResponse;const networkResponse=await fetch(event.request);return networkResponse}catch(error){console.log("Fetch failed; returning offline page instead.",error);const cache=await caches.open("offline-2010"),cachedResponse=await cache.match("/offline");return cachedResponse}})())});